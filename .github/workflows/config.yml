name: 百英雄伝攻略真書

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - 'v*.*.*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  TZ: Asia/Tokyo

# $ npx @pkgdeps/update-github-actions-permissions ".github/workflows/*.{yaml,yml}"
permissions:
  contents: read

jobs:
  eiyuden_chronicle_rewards:
    name: 百英雄伝攻略真書
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    steps:
      - name: $ git clone する
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: pnpm のセットアップを行う
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          version: 10.18.1
      - name: Node.js のセットアップを行う
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version-file: '.node-version'
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - name: $ pnpm install する
        run: pnpm install
      - name: Biome で Lint および Format をチェックする
        run: pnpm check .
      - name: $ pnpm build が通るかチェックする
        run: pnpm build
      - name: OCR をするために必要なパッケージをインストールする
        run: |
          sudo apt install -y tesseract-ocr libtesseract-dev tesseract-ocr-jpn fonts-migmix
          mkdir -p ./output
      # https://github.com/sindresorhus/capture-website-cli
      - name: capture-website-cli をインストールする
        run: |
          npm install -g capture-website-cli
      - name: Webブラウザでの表示をチェックする（スクショ および OCR結果 の取得）
        run: |
          php -t dist/ -S localhost:8080 &
          # Webサーバ が起きるまで待つ
          until : > /dev/tcp/localhost/8080; do sleep 1; done

          CHECK_URIS=(
            ''
            'rewards-gyakuhiki'
          )

          for CHECK_URI in "${CHECK_URIS[@]}"; do
            echo "[LOG] CHECK_URI: ${CHECK_URI}"
            capture-website --full-page http://localhost:8080/${CHECK_URI} --output=./output/screenshot_${CHECK_URI}.png --launch-options='{"headless": "new", "args": ["--no-sandbox", "--disable-setuid-sandbox"]}'
            tesseract ./output/screenshot_${CHECK_URI}.png ./output/screenshot_ocr_${CHECK_URI} -l jpn txt
          done
      - name: Webブラウザでの表示をチェックする（チェックスクリプト実行）
        run: |
          # 文字列が存在しない場合はエラーを返すので CI が落ちる
          echo '[LOG] grep -q "クラウドファンディング" ./output/screenshot_ocr_.txt'
          grep -q "クラウドファンディング" ./output/screenshot_ocr_.txt

          echo '[LOG] grep -q "パッケージ版ゲーム" ./output/screenshot_ocr_rewards-gyakuhiki.txt'
          grep -q "パッケージ版ゲーム" ./output/screenshot_ocr_rewards-gyakuhiki.txt

          echo '[LOG] grep -q "ネコを登場させられる" ./output/screenshot_ocr_rewards-gyakuhiki.txt'
          grep -q "ネコを登場させられる" ./output/screenshot_ocr_rewards-gyakuhiki.txt
      - name: capture-website-cli で撮影したスクショ と OCR のテキストファイル を Artifacts に保存する
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: capture-website
          path: output
